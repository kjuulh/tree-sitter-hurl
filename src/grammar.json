{
  "name": "hurl",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_statement"
      }
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_declaration_statement"
        }
      ]
    },
    "_declaration_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "request_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "header_declaration"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "http_response_declaration"
          },
          "named": true,
          "value": "response"
        }
      ]
    },
    "request_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_literal"
        },
        {
          "type": "FIELD",
          "name": "url",
          "content": {
            "type": "SYMBOL",
            "name": "url"
          }
        }
      ]
    },
    "header_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "header_name",
          "content": {
            "type": "SYMBOL",
            "name": "header_name"
          }
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "FIELD",
          "name": "header_value",
          "content": {
            "type": "SYMBOL",
            "name": "header_value"
          }
        }
      ]
    },
    "http_response_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "scheme_literal"
        },
        {
          "type": "SYMBOL",
          "name": "_space_literal"
        },
        {
          "type": "SYMBOL",
          "name": "status_code_pattern"
        }
      ]
    },
    "_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "request_literal"
        }
      ]
    },
    "request_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "GET"
        },
        {
          "type": "STRING",
          "value": "POST"
        },
        {
          "type": "STRING",
          "value": "PUT"
        },
        {
          "type": "STRING",
          "value": "DELETE"
        },
        {
          "type": "STRING",
          "value": "CONNECT"
        },
        {
          "type": "STRING",
          "value": "OPTIONS"
        },
        {
          "type": "STRING",
          "value": "TRACE"
        },
        {
          "type": "STRING",
          "value": "PATCH"
        },
        {
          "type": "STRING",
          "value": "LINK"
        },
        {
          "type": "STRING",
          "value": "UNLINK"
        },
        {
          "type": "STRING",
          "value": "PURGE"
        },
        {
          "type": "STRING",
          "value": "LOCK"
        },
        {
          "type": "STRING",
          "value": "UNLOCK"
        },
        {
          "type": "STRING",
          "value": "PROPFIND"
        },
        {
          "type": "STRING",
          "value": "VIEW"
        }
      ]
    },
    "scheme_literal": {
      "type": "STRING",
      "value": "HTTP"
    },
    "_space_literal": {
      "type": "STRING",
      "value": " "
    },
    "status_code_pattern": {
      "type": "PATTERN",
      "value": "[\\d]{3}"
    },
    "header_name": {
      "type": "PATTERN",
      "value": "[a-zA-Z-_0-9]+"
    },
    "header_value": {
      "type": "PATTERN",
      "value": "[a-zA-Z-_0-9\\s:;\\.,\\\\\\/\\\"\\'\\?\\!\\(\\)\\{\\}\\[\\]@<>=\\-\\+\\*\\#\\$\\&`|~^%]+"
    },
    "url": {
      "type": "PATTERN",
      "value": "\\S+"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

